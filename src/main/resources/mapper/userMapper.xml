<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="user">
	<resultMap type="user" id="userMap">
		<result column="USER_NO" property="userNo" jdbcType="VARCHAR" javaType="int"/>
		<result column="USER_NAME" property="userName" jdbcType="VARCHAR" javaType="string"/>
		<result column="USER_ID" property="usrId" jdbcType="VARCHAR" javaType="string"/>
		<result column="COMP_ID" property="compId" jdbcType="VARCHAR" javaType="string"/>
		<result column="NICKNAME" property="nickName" jdbcType="VARCHAR" javaType="string"/>
	
	</resultMap>
	
	<!-- 회원가입 관련 -->
	
	<!-- 중복검사-->
	<select id="idCheck" parameterType="string" resultType="int">
		SELECT COUNT(*) CNT 
		FROM USERS
		WHERE USER_ID = #{userId}
	</select>
	
	<select id="nickNameCheck" resultType="int" parameterType="string">
		SELECT COUNT(*)
		FROM USERS
		WHERE nickName = #{nickName}
	</select>
	
	<!-- 중복검사 END -->
	
	<select id="loginUser" parameterType="string" resultType="string">
		SELECT *
		FROM USERS
		WHERE USER_ID = #{userId}
	</select>
	

	<!-- 회원가입 -->
	<insert id="insertUser" parameterType="user" useGeneratedKeys="true" keyProperty="userNo" keyColumn="USER_NO">
	 INSERT INTO USERS ( COMP_ID
                         , USER_ID 
                         , USER_NAME 
                         , USER_PWD 
                         , EMAIL
                         , NICKNAME 
                         , BIRTH
                         , ADDR 
                         , PHONE 
                         , ENROLL_DATE
                         , GENDER
                         )
                VALUES (
               			   #{compId}
               			 , #{userId}
               			 , #{userName}
               			 , #{userPwd}
               			 , #{email}
               			 , #{nickname}
               			 , #{userBrth}
               			 , #{address1} || ' ' || #{address2}
               			 , #{phone}
               			 , SYSDATE
               			 , '1'
               	 		)	
	</insert>
	
	<insert id="insertCompany" parameterType="user" useGeneratedKeys="true" keyProperty="compId" keyColumn="COMP_ID">
	 INSERT INTO COMPANY ( COMP_NAME
	 					, COMP_ADDR
                        , COMP_ADDR_DETAIL 
                        , BS_REGI_NUM 
                         )
                VALUES (
               			  #{userName}
               			 , #{address1}
               			 , #{address2}
               			 , #{manager.bsRegiNum}
               	 		)	
	</insert>
	
	
	<!-- 로그인 관련 -->
	<select id="loginCheck" resultType="string" parameterType="user">
		 SELECT CASE WHEN COUNT(*) >=1 
		             THEN 'Y' 
		             ELSE 'N' 
		        END YN
		  FROM USERS
		 WHERE USER_ID = #{userId} 
		   AND USER_PWD = #{userPwd} 
		   AND STATUS = 'Y'
	</select>
	
	<select id="selectUserInfo" resultType="user" parameterType="user">
		 SELECT USER_NO
	          , USER_NAME
	          , USER_ID
	          , COMP_ID
	          , NICKNAME
	          , CASE WHEN COMP_ID IS NULL THEN '사업자회원' ELSE '개인회원' END USER_TYPE
	      FROM USERS
		 WHERE USER_ID = #{userId} 
		   AND STATUS = 'Y'
	</select>
	
	<!-- 아이디/비번 찾기 관련 -->
	<select id="findUserEmail" resultType="string" parameterType="string">
		SELECT USER_ID
		FROM USERS
		WHERE EMAIL = #{email}
	</select>
	
	<update id="updatePasswordByEmail" parameterType="map">
		UPDATE USERS
		SET USER_PWD = #{userPwd}
		WHERE EMAIL = #{email} <!-- 이메일 말고 아이디로 바꿔야함 -->
	</update>
	
	<!-- 마이페이지 관련 -->
	<select id="myPageUserInfo" resultType="user" parameterType="string">
		  SELECT USER_NO 
	           , USER_NAME
	           , USER_ID
	           , COMP_ID
	           , NICKNAME
	           , EMAIL
	           , ADDR
	           , ENROLL_DATE
	           , CASE WHEN COMP_ID IS NOT NULL THEN '사업자' ELSE '개인' END AS USER_TYPE
	           , TO_CHAR(ENROLL_DATE , 'YYYY-MM-DD HH24:MI') AS ENROLL_DATE
	           , SUBSTR(PHONE,0,3) || '-' || SUBSTR(PHONE,4,4) || '-' || SUBSTR(PHONE,8,4) AS PHONE
	      FROM USERS
	      WHERE USER_ID = #{userId}
	        AND STATUS = 'Y'   
	</select>
	
	<!-- 닉변 -->
	<update id="updateNickname" parameterType="map">
		UPDATE USERS SET NICKNAME = #{nickname}
		WHERE USER_ID = #{userId}
	</update>
	
	<!-- 마이페이지에서 비번변경 -->
	<update id="updatePassword" parameterType="map">
		UPDATE USERS SET USER_PWD = #{userPwd}
		WHERE USER_ID = #{userId}
	</update>
	
	<select id="myPageUserBookMark" resultType="user" parameterType="user">
		  SELECT USER_NO 
               , APP_ID 
               , CREATE_DATE
 		   FROM BOOKMARK    
 		   WHERE USER_NO = #{userNo}        
	</select>
	
	<update id="updateUserSecession" parameterType="user">
		UPDATE USERS
		SET STATUS = 'N'
		WHERE USER_NO = #{userNo}
	</update>
	
	
	<select id="myPageUserReview" resultType="user" parameterType="user">
		  SELECT USER_NO 
               , APP_ID 
               , COMMENT
               , RATING
               , CREATE_DATE
               , UPDATE_DATE
		   FROM REVIEW            
 		   WHERE USER_NO = #{userNo}    
	</select>
	
	<update id="updateUserInfo" parameterType="user">
	   UPDATE USERS SET USER_PWD = #{userPwd}
	                  , NICKNAME = #{nickname}
	                  , UPDATE_DTAE = SYSDATE
	   WHERE USER_NO = #{userNo}
	</update>
	
	<update id="updateUserStatus" parameterType="user">
	   UPDATE USERS SET STATUS = 'T'
	                  , UPDATE_DTAE = SYSDATE
	   WHERE USER_NO = #{userNo}
	</update>
	
	<update id="userLastLoaginAtUpdate" parameterType="user">
	   UPDATE USERS SET LAST_LOGIN_AT = SYSDATE
		WHERE USER_NO = #{userNo}
	</update>
	
	<select id="selectCompId" parameterType="string" resultType="int">
		SELECT COMP_ID
		FROM COMPANY
		WHERE COMP_NAME = #{userName}
	</select>
	
	
	<insert id="insertAuthority">
		INSERT ALL
		INTO AUTHORITIES (AUTHORITY, USER_ID) VALUES ('ROLE_USER',#{userId})
		<if test="userType.equals('사업자')">
		INTO AUTHORITIES (AUTHORITY, USER_ID) vALUES ('ROLE_MANAGER',#{userId})
		</if>
    	SELECT * FROM DUAL
	</insert>
	
	<select id="getUserByUser" resultType="user">
		SELECT * 
		FROM USERS
		WHERE USER_ID = #{userId}
		AND USER_PWD = #{userPwd}
	</select>
	
	<select id="selectBookmarkList" parameterType="map" resultType="com.kh.festait.bookmark.model.vo.Bookmark">
		SELECT B.USER_NO, B.APP_ID, B.CREATE_DATE, APP.APP_TITLE
		FROM BOOKMARK B
		JOIN EVENT_APPLICATION APP ON B.APP_ID = APP.APP_ID
		WHERE B.USER_NO = #{userNo}        
	</select>
	
	<select id="selectReviewList" parameterType="map" resultType="com.kh.festait.reviewboard.model.vo.ReviewBoard">
		SELECT R.USER_NO, R.APP_ID, R."COMMENT",
			R.RATING, R.CREATE_DATE, R.UPDATE_DATE,
			U.USER_ID, U.USER_NAME, U.NICKNAME, APP.APP_TITLE
		FROM REVIEW R
		JOIN USERS U ON R.USER_NO = U.USER_NO
		JOIN EVENT_APPLICATION APP ON R.APP_ID = APP.APP_ID
		WHERE R.USER_NO = #{userNo}
		ORDER BY R.CREATE_DATE DESC   
	</select>

	<insert id="insertProfile" parameterType="map">
		INSERT INTO IMAGE (IMG_TYPE , ORIGIN_NAME , CHANGE_NAME , IMG_ORDER , REF_NO) 
			VALUES ('U',#{originName},#{changeName} , 1 , #{refNo})
	</insert>

</mapper>